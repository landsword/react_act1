{"version":3,"sources":["Component/Header.js","Component/Nav.js","Component/Control.js","Component/readContents.js","Component/createContents.js","Component/updateContents.js","App.js","serviceWorker.js","index.js"],"names":["Header","href","onClick","e","preventDefault","this","props","loadContent","bind","title","Component","Nav","lists","data","i","length","push","key","id","data-id","readContent","target","dataset","Control","controlMode","type","value","deleteContent","ReadContents","desc","CreateContents","access","method","onSubmit","name","placeholder","UpdateContents","propsHandler","setState","state","onChange","App","getReadContent","object","select_id","onChangeMode","_title","_desc","_article","_content","main","mode","_contents","Array","from","last_object_id","_id","className","Number","_mode","window","confirm","cnt","alert","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.045640ce.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <a href='/'\n          onClick={function(e) {\n              e.preventDefault();\n              this.props.loadContent();\n          }.bind(this)}\n        >\n          <h1>{this.props.title}</h1>\n        </a>\n      </header>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass Nav extends Component {\n  render() {\n    let lists = [];\n    let data = this.props.data;\n    for (let i = 0; i < data.length; i++) {\n      lists.push(\n          <li key={data[i].id}>\n          <a\n            href={'/content/' + data[i].id}\n            data-id={data[i].id}\n            onClick={function(e) {\n                e.preventDefault();\n                this.props.readContent(e.target.dataset.id);\n            }.bind(this)}\n          >{data[i].title}</a></li>\n      );\n    }\n    return (\n      <nav>\n        <ul>\n          {lists}\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;","import React, { Component } from 'react';\n\nclass Control extends Component {\n  render() {\n    return (\n      <ul>\n        <li><a\n          href='/create'\n          onClick={function(e) {\n            e.preventDefault();\n            this.props.controlMode('create');\n          }.bind(this)}>create</a></li>\n        <li><a\n          href='/update'\n          onClick={function(e) {\n            e.preventDefault();\n            this.props.controlMode('update');\n          }.bind(this)}>update</a></li>\n        <li><input\n          type='button'\n          value='delete'\n          onClick={function(e) {\n            e.preventDefault();\n            this.props.deleteContent();\n          }.bind(this)} /></li>\n      </ul>\n    );\n  }\n}\n\nexport default Control;","import React, { Component } from 'react';\n\nclass ReadContents extends Component {\n  render() {\n    return (\n      <article>\n        <h2>{this.props.title}</h2>\n        {this.props.desc}\n      </article>\n    );\n  }\n}\n\nexport default ReadContents;","import React, { Component } from 'react';\n\nclass CreateContents extends Component {\n  render() {\n    return (\n      <article>\n        <form access='create_process' method='post' onSubmit={function(e) {\n            e.preventDefault();\n            this.props.onSubmit(e.target.title.value, e.target.desc.value);\n        }.bind(this)}>\n          <p>\n            <input type='text' name='title' placeholder='title' />\n          </p>\n          <p>\n              \n            <input type='text' name='desc' placeholder='description' />\n          </p>\n          <p>\n            <input type='submit' />\n          </p>\n        </form>\n      </article>\n    );\n  }\n}\n\nexport default CreateContents;","import React, { Component } from 'react';\n\nclass UpdateContents extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          id : this.props.data.id,\n          title : this.props.data.title,\n          desc : this.props.data.desc\n      }\n  }\n  propsHandler = function(e) {\n      this.setState({\n        [e.target.name] : e.target.value\n      });\n  }\n  render() {\n    return (\n      <article>\n        <form access='create_process' method='post' onSubmit={function(e) {\n            e.preventDefault();\n            this.props.onSubmit(this.state.id, this.state.title, this.state.desc);\n        }.bind(this)}>\n            <input\n              type='hidden' \n              name='id' \n              value={this.state.id} />\n          <p>\n            <input\n              type='text' \n              name='title' \n              value={this.state.title} \n              placeholder='title'\n              onChange={this.propsHandler.bind(this)}\n              />\n          </p>\n          <p>\n            <input \n              type='text' \n              name='desc' \n              value={this.state.desc} \n              placeholder='description'\n              onChange={this.propsHandler.bind(this)}\n              />\n          </p>\n          <p>\n            <input type='submit' />\n          </p>\n        </form>\n      </article>\n    );\n  }\n}\n\nexport default UpdateContents;","import React, { Component } from 'react';\nimport Header from './Component/Header';\nimport Nav from './Component/Nav';\nimport Control from './Component/Control';\nimport ReadContents from './Component/readContents';\nimport CreateContents from './Component/createContents';\nimport UpdateContents from './Component/updateContents';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.last_object_id = 3;\n    this.state = {\n      mode: 'home',\n      select_id: 1,\n      main: {title: 'WEBn-React', desc: 'It`s WEBn - React section :)'},\n      object: [\n        {id: 1, title: 'HTML', desc: 'HyperText Markup Language'},\n        {id: 2, title: 'CSS', desc: 'Casecade Style Sheet'},\n        {id: 3, title: 'Javascript', desc: 'More Interactive'}\n      ]\n    }\n  }\ngetReadContent = function() {\n  let data = null;\n  for (let i = 0; i < this.state.object.length; i++) {\n    if (this.state.select_id === this.state.object[i].id) {\n      data = this.state.object[i];\n      break;\n    }\n  }\n  return data;\n}\nonChangeMode = function() {\n  let _title, _desc, _article, _content = null;\n  let main = this.state.main;\n  let object = this.state.object;\n  let mode = this.state.mode;\n  if (mode === 'home') {\n    _title = main.title;\n    _desc = main.desc;\n    _article = <ReadContents title={_title} desc={_desc}></ReadContents>\n  } else if (mode === 'read') {\n    _content = this.getReadContent();\n    _article = <ReadContents title={_content.title} desc={_content.desc}></ReadContents>\n  } else if (mode === 'create') {\n    _article = <CreateContents \n      onSubmit={function(_title, _desc) {\n        let _contents = Array.from(object);\n        this.last_object_id++;\n        _contents.push({id: this.last_object_id, title: _title, desc: _desc});\n        this.setState({\n          object: _contents,\n          mode: 'read',\n          select_id: this.last_object_id\n        });\n    }.bind(this)}></CreateContents>\n  } else if (mode === 'update') {\n    _content = this.getReadContent();\n    _article = <UpdateContents\n      data={_content}\n      onSubmit={function(_id, _title, _desc) {\n       let _contents = Array.from(object);\n        for (let i = 0; i < _contents.length; i++) {\n          if ( _contents[i].id === _id) {\n            _contents[i] = {id: _id, title: _title, desc: _desc};\n            break;\n          }\n        }\n        this.setState({\n          object: _contents,\n          mode: 'read'\n        });\n      }.bind(this)}></UpdateContents>\n    }\n  return _article;\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header \n          loadContent={function() {\n            this.setState({\n              mode: 'home'\n            });\n          }.bind(this)}\n          title={this.state.main.title}></Header>\n        <Nav\n          data={this.state.object}\n          readContent={function(id) {\n            this.setState({\n              mode: 'read',\n              select_id: Number(id)\n            });\n          }.bind(this)}\n        ></Nav>\n        <Control\n          controlMode={function(_mode) {\n            this.setState({\n              mode: _mode\n            });\n          }.bind(this)}\n          deleteContent={function() {\n            if(window.confirm('Really??')) {\n              let _content = this.getReadContent(); // id, title, desc\n              let _contents = [];\n              let cnt = 0;\n              for (let i = 0; i < this.state.object.length; i++) {\n                if (_content.id !== this.state.object[i].id) {\n                  _contents[cnt] = this.state.object[i];\n                  cnt++;\n                } else {\n                  continue;\n                }\n              }\n              this.setState({\n                mode: 'home',\n                object: _contents\n              });\n              alert('Content Delete success.');\n            } else {\n              alert('Delete cancel.');\n            }\n          }.bind(this)}\n        ></Control>\n        {this.onChangeMode()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}